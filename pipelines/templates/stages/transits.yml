parameters:
- name: destroy
  type: boolean
  default: false
- name: transits
  type: object
- name: environment
  type: string
- name: serviceConnectionName
  type: string
- name: plan
  type: boolean
  default: false


stages:
- ${{ each transit in parameters.transits }}:
  - stage: ${{ replace(transit.region, '-', '_') }}${{ transit.csp }}TransitsDeploymentStage
    dependsOn: [ ControllerDeploymentStage ]
    displayName: ${{ transit.csp }} hub ${{ transit.region }}
    variables:
      - group: ${{ parameters.environment }}-state
      - group: ${{ parameters.environment }}-controller
    jobs:
      - job: ${{ replace(transit.region, '-', '_') }}TransitDeploymentJob
        displayName: ${{ transit.csp }} hub ${{ transit.region }}
        variables:
          terraform_path: $(System.DefaultWorkingDirectory)/terraform/${{ parameters.environment }}/${{ transit.csp }}/${{ transit.region }}/hub
          plan_file: hub
          ${{ if parameters.destroy }}:
            displayName: "Destroying Transits"
            plan: "terragrunt plan -out=${{ variables.plan_file }} -destroy"
          ${{ if not(parameters.destroy) }}:
            plan: "terragrunt plan -out=${{ variables.plan_file }}"
          ${{ if or(eq(variables['Build.Reason'], 'PullRequest' ), parameters.plan) }}:
            deploy: ""
            displayName: "Planning Transits"
          ${{ if and(ne(variables['Build.Reason'], 'PullRequest'), not(parameters.plan)) }}:
            deploy: "terragrunt apply ${{ variables.plan_file }}"
            displayName: "Deploying Transits"

        steps:
          - template: ../common.yml
            parameters:
              serviceConnectionName: ${{ parameters.serviceConnectionName }}

          - script: |
              cd $(terraform_path)
              terragrunt init
              ${{ variables.plan }}
              ${{ variables.deploy }}
            displayName: ${{ variables.displayName }}
            env:
              REMOTE_STATE_RESOURCE_GROUP: $(stateResourceGroupName)
              REMOTE_STATE_STORAGE_ACCOUNT: $(stateStorageAccountName)
              ARM_CLIENT_ID: $(SERVICE_PRINCIPAL_ID)
              ARM_SUBSCRIPTION_ID: $(SUBSCRIPTION_ID)
              ARM_TENANT_ID: $(TENANT_ID)
              ARM_CLIENT_SECRET: $(SERVICE_PRINCIPAL_KEY)