parameters:
- name: spokes
  type: object
- name: environment
  type: string
- name: serviceConnectionName
  type: string
stages:
- ${{ each region in parameters.spokes }}:
  - ${{ each spoke in region.spokes }}:
    - stage: ${{ replace(spoke, '-', '_') }}SpokeDeploymentStage
      dependsOn:
       - "${{ replace(region.region, '-', '_') }}${{ region.csp }}TransitsDeploymentStage"
      displayName: Azure ${{ spoke }} Deployment
      variables:
        - group: ${{ parameters.environment }}-state
      jobs:
        - job: ${{ spoke }}SpokesDeploymentJob
          displayName: Deploy Spoke ${{ spoke }}
          variables:
            terraform_path: $(System.DefaultWorkingDirectory)/terraform/${{ parameters.environment }}/${{ region.csp }}/${{ spoke.key }}/spokes/${{ spoke.value }}
            plan_file: azure_spokes
            plan: "terragrunt plan -out=${{ variables.plan_file }}"
            ${{ if eq(variables['Build.Reason'], 'PullRequest' ) }}:
              deploy: ""
            ${{ if ne(variables['Build.Reason'], 'PullRequest' ) }}:
              deploy: "terragrunt apply ${{ variables.plan_file }}"
          steps:
            - template: ../common.yml
              parameters:
                serviceConnectionName: ${{ parameters.serviceConnectionName }}

            - script: |
                cd $(terraform_path)
                terragrunt init
                ${{ variables.plan }}
                ${{ variables.deploy }}
              displayName: Deploy Spoke
              env:
                REMOTE_STATE_RESOURCE_GROUP: $(stateResourceGroupName)
                REMOTE_STATE_STORAGE_ACCOUNT: $(stateStorageAccountName)
                ARM_CLIENT_ID: $(SERVICE_PRINCIPAL_ID)
                ARM_SUBSCRIPTION_ID: $(SUBSCRIPTION_ID)
                ARM_TENANT_ID: $(TENANT_ID)
                ARM_CLIENT_SECRET: $(SERVICE_PRINCIPAL_KEY)